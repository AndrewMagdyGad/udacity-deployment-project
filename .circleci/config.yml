version: 2.1
orbs:
    node: circleci/node@4.7.0
    aws-cli: circleci/aws-cli@1.3.1
    eb: circleci/aws-elastic-beanstalk@2.0.1
jobs:
    build:
        docker:
            - image: "cimg/base:stable"
        steps:
            - node/install:
                  node-version: "14.19.0"
            - checkout
            - run:
                  name: Install Front-End
                  command: |
                      npm run frontend:install
            - run:
                  name: Lint Front-End
                  command: |
                      npm run frontend:lint
            - run:
                  name: Build Front-End
                  command: |
                      npm run frontend:build
            - run:
                  name: Install Back-End
                  command: |
                      npm run backend:install
            - run:
                  name: Build Back-End
                  command: |
                      npm run backend:build
            - persist_to_workspace:
                  root: ~/project
                  paths:
                      - .
    deploy:
        docker:
            - image: "cimg/base:stable"
        steps:
            - attach_workspace:
                  at: ~/project
            - aws-cli/setup
            - eb/setup
            - node/install:
                  node-version: "14.19.0"
            - run:
                  name: Deploy  Front-End
                  command: npm run frontend:deploy
            - run:
                  name: Deploy Back-End
                  command: npm run backend:deploy
            - run:
                  name: Set Back-End Environment Variables
                  command: |
                      eb setenv AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
                      eb setenv AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
                      eb setenv AWS_BUCKET=$AWS_BUCKET
                      eb setenv AWS_PROFILE=$AWS_PROFILE
                      eb setenv AWS_REGION=$AWS_REGION
                      eb setenv JWT_SECRET=$JWT_SECRET
                      eb setenv POSTGRES_DB=$POSTGRES_DB
                      eb setenv POSTGRES_HOST=$POSTGRES_HOST
                      eb setenv POSTGRES_PASSWORD=$POSTGRES_PASSWORD
                      eb setenv POSTGRES_PORT=$POSTGRES_PORT
                      eb setenv POSTGRES_USERNAME=$POSTGRES_USERNAME
                      eb setenv URL=$URL
workflows:
    build_and_deploy:
        jobs:
            - build
            - deploy:
                  requires:
                      - build # only deploy if the build job has completed
                  filters:
                      branches:
                          only: main # only deploy when on main
